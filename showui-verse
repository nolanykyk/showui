using { /Fortnite.com/Devices }
using { /Fortnite.com/UI }
using { /Verse.org/Simulation }
using { /Verse.org/Colors/NamedColors }
using { /UnrealEngine.com/Temporary/Diagnostics }
using { /UnrealEngine.com/Temporary/UI }
using { /UnrealEngine.com/Temporary/SpatialMath }
using { /Verse.org/Assets }

ShowUI := class(creative_device):
 
    S2M<localizes>(S:string):message="{S}"
 
    @editable PlayerSpawners : []player_spawner_device = array{}
    @editable RefreshRate : float = 0.1
    var Test : int = 0
    
    var myMap : [agent]int = map{}
    var TestText : [player]tuple(text_block, texture_block) = map{}

    OnBegin<override>()<suspends>:void=
        for(PlayerSpawner : PlayerSpawners):
            PlayerSpawner.SpawnedEvent.Subscribe(PlayerSpawned)

    PlayerSpawned(Agent : agent):void=
        if(Text := TestText[Agent]){}
        else:
            AssignUI(Agent)

    AssignUI(Agent : agent):void=
        MyCanvas := MakeCanvas(Agent)
        if:
            PlayerUI := GetPlayerUI[player[Agent]]
        then:
            PlayerUI.AddWidget(MyCanvas)
            spawn{RefreshUI(Agent)}
 
    var TestImage : texture = # EXAMPLE: Textures.Test

    RefreshUI(Agent : agent)<suspends>:void=
        if(Text := TestText[Agent]):
            loop:
                Sleep(RefreshRate)        
                TextBlock := Text(0)
                TextBlock.SetText(S2M("{Test}"))
            Sleep(0.1)

    MakeCanvas(Agent : agent):canvas=
        MyTextBlock := text_block:
            DefaultTextColor := White
            DefaultShadowColor := Black
            DefaultShadowOffset := option{vector2{X:=2.5, Y:=2.5}}
        MyTextBlock.SetShadowOpacity(0.6)

        TestUI := texture_block:
            DefaultImage := TestImage
            DefaultDesiredSize := vector2{X := 275.0, Y := 125.0}

        if(Player := player[Agent]):
            if:
                set TestText[Player] = (MyTextBlock, TestUI)

        MyCanvas := canvas:
            Slots := array:
                canvas_slot:
                    Widget := TestUI
                    Anchors := anchors{Minimum := vector2{X := 1.0, Y := 0.45}, Maximum := vector2{X := 1.0, Y := 0.45}}
                    Offsets := margin{Top := 0.0, Left := 0.0, Right := 0.0, Bottom := 0.0}
                    Alignment := vector2{X := 1.0, Y := 0.5}
                    SizeToContent := true
                    ZOrder := 3
                canvas_slot:
                    Widget := MyTextBlock
                    Anchors := anchors{Minimum := vector2{X := 0.99, Y := 0.45}, Maximum := vector2{X := 0.99, Y := 0.45}}
                    Offsets := margin{Top := 0.0, Left := 0.0, Right := 0.0, Bottom := 0.0}
                    Alignment := vector2{X := 1.0, Y := 0.5}
                    SizeToContent := true
                    ZOrder := 4
        return MyCanvas
